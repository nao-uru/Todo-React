{"version":3,"sources":["components/AddInput.jsx","App.jsx","index.js"],"names":["AddInput","props","addTask","inputValue","onChange","className","id","method","placeholder","type","autoComplete","onKeyPress","value","App","useState","addInput","setAddInput","searchText","setSearchText","taskList","setTaskList","newTasks","event","key","console","log","preventDefault","target","e","map","inputSearch","startsWith","todo","index","defaultValue","onClick","taskDone","onClickDone","deleteTask","window","confirm","splice","onClickDelete","href","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oNAEaA,EAAW,SAACC,GACvB,IAAOC,EAA+BD,EAA/BC,QAAQC,EAAuBF,EAAvBE,WAAWC,EAAYH,EAAZG,SAE1B,OACE,qBAAKC,UAAU,aAAf,SACE,sBAAMC,GAAG,WAAWC,OAAO,MAA3B,SACE,uBAAOD,GAAG,YAAYE,YAAY,WAAWC,KAAK,OAAOC,aAAa,MAAMC,WAAYT,EAASU,MAAOT,EAAYC,SAAUA,SC2GvHS,EAhHI,SAACZ,GAClB,MAAgCa,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAmCF,mBAAS,IAA5C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAAgCJ,mBAAS,CAAC,QAAQ,QAAQ,UAA1D,mBAAOK,EAAP,KAAiBC,EAAjB,KACMC,EAAQ,sBAAOF,GAAP,CAAgBJ,IAmE9B,OACE,qCACA,oBAAIV,UAAU,QAAd,uBACA,mBAAGA,UAAU,UAAb,sBAEA,sBAAKA,UAAU,UAAf,UAEA,cAAC,EAAD,CACCH,QAvEa,SAACoB,GACf,GAAiB,UAAdA,EAAMC,IAAiB,CAGxB,GAFAC,QAAQC,IAAI,YACZH,EAAMI,iBACU,KAAbX,EAAiB,OAEpBK,EAAYC,GACZL,EAAY,IAEZQ,QAAQC,IAAI,eAAiBV,KA+D9BZ,WAAYY,EACZX,SA1EsB,SAACkB,GAAD,OAAWN,EAAYM,EAAMK,OAAOf,UA6E3D,qBAAKP,UAAU,aAAf,SACE,sBAAMC,GAAG,cAAT,SACE,uBAAOA,GAAG,eAAeG,KAAK,OAAOD,YAAY,iBAAkBE,aAAa,MAAMN,SAhEpE,SAACwB,GACvBV,GAAc,kBAAMU,EAAED,OAAOf,SAE7BY,QAAQC,IAAIR,GAEZI,EAASQ,KAAI,SAACC,GAUZ,OAT0C,IAAvCA,EAAYC,WAAWd,IAExBO,QAAQC,IAAIK,GACZN,QAAQC,IAAIR,IAGZO,QAAQC,IAAI,WAGPR,MAiD4GL,MAAOK,QAK5H,qBAAKZ,UAAU,YAAf,SACE,oBAAIC,GAAG,iBAAP,SACGa,EAASU,KAAI,SAACG,EAAKC,GAClB,OACE,qBAAI5B,UAAU,iBAAd,UACE,uBAAOI,KAAK,OAAOyB,aAAcF,EAAM3B,WAAoB,IAAT2B,EAAiB,YAAc,OAAQG,QAAS,kBArC3F,SAACH,GAClB,IAAMI,EAAQ,YAAOjB,GACrBiB,EAASP,KAAI,SAACG,GAGZ,OADAR,QAAQC,IAAI,eADL,KAKTL,EAAYgB,GA6BsGC,MACxG,mBAAGhC,UAAU,cAAc8B,QAAS,kBApD1B,SAACF,GACrB,IAAMK,EAAU,YAAOnB,IAIP,IADCoB,OAAOC,QAAQ,kFAE9BF,EAAWG,OAAOR,EAAM,GACxBb,EAAYkB,IA6CoCI,CAAcT,QAFpBA,UAS5C,mBAAG5B,UAAU,OAAb,SAAoB,mBAAGsC,KAAK,qCAAR,sCCtGxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.cb9a8d10.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const AddInput = (props) => {\n  const {addTask,inputValue,onChange} = props;\n\n  return (\n    <div className=\"input-area\">\n      <form id=\"add-form\" method=\"get\">\n        <input id=\"add-input\" placeholder=\"New Task\" type=\"text\" autoComplete=\"off\" onKeyPress={addTask} value={inputValue} onChange={onChange} />\n      </form>\n    </div>\n  )\n}\n","import React, { useState } from 'react';\nimport { AddInput } from './components/AddInput';\n\nexport const App = (props) => {\n  const [addInput, setAddInput] = useState('');\n  const [searchText,setSearchText] = useState('');\n  const [taskList, setTaskList] = useState(['Task1','Task2','React']);\n  const newTasks = [...taskList,addInput];\n\n  // タスク追加\n  const onChangeAddInput = (event) => setAddInput(event.target.value);\n  const addTask = (event) => {\n    if(event.key === 'Enter') {\n      console.log('add task');\n      event.preventDefault()\n      if(addInput === '') return;\n      \n      setTaskList(newTasks);\n      setAddInput('');\n\n      console.log('New task is ' + addInput); \n    }\n  }\n\n  // タスク検索\n  const searchTaskInput = (e) => {\n    setSearchText(() => e.target.value);\n    \n    console.log(searchText);\n\n    newTasks.map((inputSearch)=> {\n      if(inputSearch.startsWith(searchText) !== false) {\n\n        console.log(inputSearch);\n        console.log(searchText);\n\n      }else {\n        console.log('no here');\n      }\n\n      return searchText;\n    });\n   \n  }\n\n  \n\n  // タスク削除\n  const onClickDelete = (index) => {\n    const deleteTask = [...taskList];\n    \n\n    const delateOK = window.confirm('todoを削除してもいいですか？');\n    if(delateOK === true) {\n      deleteTask.splice(index,1);\n      setTaskList(deleteTask);\n    }\n    \n  }  \n\n\n  // タスク完了\n  const onClickDone =(todo)=> {\n    const taskDone = [...taskList];\n    taskDone.map((todo) => {\n      todo = false;\n      console.log('hello'+ todo);\n      return todo;\n    });\n\n    setTaskList(taskDone);\n\n  }\n  \n  return (\n    <>\n    <h1 className=\"title\">Todo List</h1>\n    <p className=\"content\">ADD TASK</p>\n    \n    <div className=\"wrapper\">\n\n    <AddInput \n     addTask={addTask}\n     inputValue={addInput}\n     onChange={onChangeAddInput}\n    />\n  \n    <div className=\"input-area\">\n      <form id=\"search-form\">\n        <input id=\"search-input\" type=\"text\" placeholder=\"Search Keyword\"  autoComplete=\"off\"　onChange={searchTaskInput} value={searchText}  />\n      </form>\n    </div>\n\n    \n    <div className=\"task-area\">\n      <ul id=\"task-area-list\">\n        {taskList.map((todo,index) => {\n          return (\n            <li className=\"task-area-list\" key={index} >\n              <input type=\"text\" defaultValue={todo} className={todo === false ? 'task-done' : 'task'} onClick={() => onClickDone(todo)}/>\n              <i className=\"fa fa-trash\" onClick={()=>onClickDelete(index)}></i>\n            </li>\n          )\n        })}\n      </ul>\n    </div>\n\n    <p className=\"link\"><a href=\"https://nao-uru.github.io/Todo-Js/\">JavaScripc Only</a></p>\n\n  </div>\n\n    </>\n  );\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"./style.css\";\nimport App from './App.jsx';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}