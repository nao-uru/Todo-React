{"version":3,"sources":["App.jsx","index.js"],"names":["App","props","useState","addInput","setTodoText","searchText","setSearchText","taskList","setTaskList","newTasks","console","log","onChangeAddInput","e","target","value","onChangeInput","className","id","method","placeholder","type","autoComplete","onKeyPress","event","key","preventDefault","onChange","map","inputSearch","startsWith","todo","index","onClick","deleteTask","splice","alert","onClickDelete","href","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oNA+GeA,EA7GI,SAACC,GAClB,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAmCF,mBAAS,IAA5C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAAgCJ,mBAAS,CAAC,QAAQ,QAAQ,UAA1D,mBAAOK,EAAP,KAAiBC,EAAjB,KACMC,EAAQ,sBAAOF,GAAP,CAAgBJ,IAG9BO,QAAQC,IAAIN,GAGZ,IAAMO,EAAmB,SAACC,GAAD,OAAOT,EAAYS,EAAEC,OAAOC,QAsD/CC,EAAgB,WACpBN,QAAQC,IAAI,UAGd,OACE,qCACA,oBAAIM,UAAU,QAAd,uBACA,mBAAGA,UAAU,UAAb,sBAEA,sBAAKA,UAAU,UAAf,UAEA,qBAAKA,UAAU,aAAf,SACE,sBAAMC,GAAG,WAAWC,OAAO,MAA3B,SACE,uBAAOD,GAAG,YAAYE,YAAY,WAAWC,KAAK,OAAOC,aAAa,MAAMC,WAlElE,SAACC,GACf,GAAiB,UAAdA,EAAMC,IAAiB,CAGxB,GAFAf,QAAQC,IAAI,YACZa,EAAME,iBACU,KAAbvB,EAAiB,OAEpBK,EAAYC,GACZL,EAAY,IAEZM,QAAQC,IAAIC,GACZF,QAAQC,IAAI,eAAiBR,GAC7BO,QAAQC,IAAIF,KAuDuFM,MAAOZ,EAAUwB,SAAUf,QAIhI,qBAAKK,UAAU,aAAf,SACE,sBAAMC,GAAG,cAAcC,OAAO,MAA9B,SACE,uBAAOD,GAAG,eAAeG,KAAK,OAAOD,YAAY,iBAAkBE,aAAa,MAAMK,SAxDpE,SAACd,GACvBP,GAAc,kBAAMO,EAAEC,OAAOC,SAG7BL,QAAQC,IAAIN,GAEZI,EAASmB,KAAI,SAACC,GAWZ,OAV0C,IAAvCA,EAAYC,WAAWzB,IAExBK,QAAQC,IAAIkB,GACZnB,QAAQC,IAAIN,GACZK,QAAQC,IAAI,iBAGZD,QAAQC,IAAI,WAGP,OAuC4GI,MAAOV,QAK5H,qBAAKY,UAAU,YAAf,SACE,oBAAIC,GAAG,iBAAP,SACGX,EAASqB,KAAI,SAACG,EAAKC,GAClB,OACE,qBAAIf,UAAU,iBAAd,UACE,uBAAOI,KAAK,OAAON,MAAOgB,EAAMJ,SAAUX,EAAeiB,QAAS,aAAyBhB,UAAU,SACrG,mBAAGA,UAAU,cAAcgB,QAAS,kBA3C1B,SAACD,GACrB,IAAME,EAAU,YAAO3B,GACvB2B,EAAWC,OAAOH,EAAM,GACxBxB,EAAY0B,GAEZE,MAAM,gFAsC4CC,CAAcL,QAFpBA,UAS5C,mBAAGf,UAAU,OAAb,SAAoB,mBAAGqB,KAAK,qCAAR,sCClGxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.2dbbb65b.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nexport const App = (props) => {\n  const [addInput, setTodoText] = useState('');\n  const [searchText,setSearchText] = useState(\"\");\n  const [taskList, setTaskList] = useState([\"Task1\",\"Task2\",\"React\"]);\n  const newTasks = [...taskList,addInput];\n  // const [inputDone, setInputDone] = useState('task-done');\n\n  console.log(searchText);\n\n  // タスク追加\n  const onChangeAddInput = (e) => setTodoText(e.target.value);\n  const addTask = (event) => {\n    if(event.key === 'Enter') {\n      console.log('add task');\n      event.preventDefault()\n      if(addInput === '') return;\n      \n      setTaskList(newTasks);\n      setTodoText('');\n\n      console.log(onChangeAddInput);\n      console.log('New task is ' + addInput); \n      console.log(newTasks);\n    }\n  }\n\n  // タスク検索\n  const searchTaskInput = (e) => {\n    setSearchText(() => e.target.value);\n    \n\n    console.log(searchText);\n\n    newTasks.map((inputSearch)=> {\n      if(inputSearch.startsWith(searchText) !== false) {\n\n        console.log(inputSearch);\n        console.log(searchText);\n        console.log('remain tasks');\n\n      }else {\n        console.log('no here');\n      }\n\n      return '';\n    });\n  }\n\n  \n\n  // タスク削除\n  const onClickDelete = (index) => {\n    const deleteTask = [...taskList];\n    deleteTask.splice(index,1);\n    setTaskList(deleteTask);\n\n    alert('todoを削除してもいいですか？');\n  }  \n\n  // タスク完了\n  const onClickDone = (index) => {\n    \n  }\n  \n  const onChangeInput = ()=> {\n    console.log('hello');\n  }\n  \n  return (\n    <>\n    <h1 className=\"title\">Todo List</h1>\n    <p className=\"content\">ADD TASK</p>\n    \n    <div className=\"wrapper\">\n\n    <div className=\"input-area\">\n      <form id=\"add-form\" method=\"get\">\n        <input id=\"add-input\" placeholder=\"New Task\" type=\"text\" autoComplete=\"off\" onKeyPress={addTask} value={addInput} onChange={onChangeAddInput} />\n      </form>\n    </div>\n  \n    <div className=\"input-area\">\n      <form id=\"search-form\" method=\"get\">\n        <input id=\"search-input\" type=\"text\" placeholder=\"Search Keyword\"  autoComplete=\"off\"　onChange={searchTaskInput} value={searchText} />\n      </form>\n    </div>\n\n    \n    <div className=\"task-area\">\n      <ul id=\"task-area-list\">\n        {taskList.map((todo,index) => {\n          return (\n            <li className=\"task-area-list\" key={index}>\n              <input type=\"text\" value={todo} onChange={onChangeInput} onClick={()=> onClickDone(index)} className='task'/>\n              <i className=\"fa fa-trash\" onClick={()=>onClickDelete(index)}></i>\n            </li>\n          )\n        })}\n      </ul>\n    </div>\n\n    <p className=\"link\"><a href=\"https://nao-uru.github.io/Todo-Js/\">JavaScripc Only</a></p>\n\n  </div>\n\n    </>\n  );\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"./style.css\";\nimport App from './App.jsx';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}